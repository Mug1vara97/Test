name: Deploy Documentation with Changelog

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: write  # Добавлены права на запись для коммита изменений
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Update CHANGELOG
      run: |
        # Получаем информацию о последнем коммите
        COMMIT_MSG=$(git log -1 --pretty=format:"%s")
        COMMIT_HASH=$(git log -1 --pretty=format:"%H")
        COMMIT_DATE=$(git log -1 --pretty=format:"%cd" --date=short)
        COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
        
        # Создаем файл если его нет
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog\n" > CHANGELOG.md
        fi
        
        # Добавляем запись в начало файла
        echo -e "## [$COMMIT_HASH]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$COMMIT_HASH) - $COMMIT_DATE\n- Author: $COMMIT_AUTHOR\n- Message: $COMMIT_MSG\n" | cat - CHANGELOG.md > temp.md
        mv temp.md CHANGELOG.md
        
        # Коммитим изменения
        git config --global user.name "Docs Bot"
        git config --global user.email "docs-bot@example.com"
        git add CHANGELOG.md
        git commit -m "Update CHANGELOG with latest commit" || echo "No changes to commit"
        git push

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Prepare DocFX structure
      run: |
        # Создаем структуру документации
        mkdir -p articles
        [ -f CHANGELOG.md ] && cp CHANGELOG.md articles/
        
        # Обновляем оглавление
        if ! grep -q "Changelog" toc.yml; then
          echo "- name: Changelog" >> toc.yml
          echo "  href: articles/CHANGELOG.md" >> toc.yml
        fi

    - run: dotnet tool update -g docfx
    - run: docfx docfx.json

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './_site'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4